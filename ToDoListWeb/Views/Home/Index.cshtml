@using ToDoList.Models
@model IEnumerable<Tasks>

@{
    ViewData["Title"] = "Home Page";
    ViewData["MyData"] = "123";
}

<div class="container mt-5">
    <h1>Task List</h1>

    <script>
        window.localStorage.setItem("message", "Hello World!");
        //alert(window.localStorage.getItem("message"));
        alert("Привет, это программа для работы с задачами");
    </script>

    @if (Model != null && Model.Any())
    {
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Task ID</th>
                    <th>Task Name</th>
                    <th>Task Description</th>
                    <th>Task Duration</th>
                    <th>Task Priority</th>
                    <th>Is Confirm?</th>
                    <th>User ID</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in Model)
                {
                    <tr>
                        <td>@task.TaskId</td>
                        <td>@task.TaskName</td>
                        <td>@task.TaskDescription</td>
                        <td>@task.TaskDuration</td>
                        <td>@task.TaskPriority</td>
                        <td>@(task.TaskIsConfirm ? "Yes" : "No")</td>
                        <td>@task.TaskUserId</td>
                        <td>
                            <form asp-action="DeleteTask">
                                <input type="hidden" asp-for="@task.TaskId" />
                                <input type="submit" value="Удалить" class="btn btn-danger" />
                            </form>
                        </td>
                        <td>
                            <a asp-action="RedactTaskView" asp-route-search="@task.TaskId" asp-route-id="@task.TaskId" class="btn btn-danger">Редактировать</a> |
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No tasks available.</p>
    }
</div>
